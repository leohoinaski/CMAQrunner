#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Aug  5 09:00:25 2022

@author: leohoinaski
"""
import argparse
#import os

def writePrepMeganInput(MEGANHome,wrf_file,ncols,nrows):  
    scriptPath = MEGANHome +'/MEGAN31_Prep_Code_July2020'       
    file1 = open(scriptPath + "/prepmegan4cmaq.inp","w") 
    file1.write('&control')
    file1.write('\n')
    file1.write('\nstart_lai_mnth = 1,')
    file1.write('\nend_lai_mnth   = 12,')              
    file1.write("\nwrf_dir = '"+wrf_file+"',")
    file1.write("\nmegan_dir = '"+MEGANHome+"/input',")
    file1.write("\nout_dir = '"+MEGANHome+"/input',")
    file1.write('\n')
    file1.write('\n/')
    file1.write('\n')
    file1.write('\n&windowdefs')
    file1.write('\n')
    file1.write('\n x0         =  1,')
    file1.write('\n y0         =  1,')
    file1.write('\n ncolsin    =  '+str(ncols)+',')    
    file1.write('\n nrowsin    =  '+str(nrows)+',')    
    file1.write('\n')
    file1.write('\n/') 
    file1.close()
    return MEGANHome    


def writePrepMeganCantype(MEGANHome,wrf_file,ncols,nrows):  
    scriptPath = MEGANHome +'/MEGAN31_Prep_Code_July2020'       
    file1 = open(scriptPath + "/prepmegan4cmaq_cantype.inp","w") 
    file1.write('&control')
    file1.write('\n')
    file1.write('\nstart_lai_mnth = 1,')
    file1.write('\nend_lai_mnth   = 12,')              
    file1.write("\nwrf_dir = '"+wrf_file+"',")
    file1.write("\nmegan_dir = '"+MEGANHome+"/input',")
    file1.write("\nout_dir = '"+MEGANHome+"/input',")
    #file1.write('\n')
    file1.write('\n/')
    file1.write('\n')
    file1.write('\n&cantype')
    file1.write("\ntreefilename  = 'GF3aTree.nc3")
    file1.write("\ntreevarname   = 'm20tree'")
    file1.write("\ntreefillvalue = '-128'")
    file1.write("\nNTfilename  = 'NTfrac_reorder_lat.nc'")
    file1.write("\nNTvarname   = 'NTfrac'")
    file1.write("\nNTfillvalue = '0.'")
    file1.write("\nTRTfilename  = 'tropfrac_reorder_lat.nc'")
    file1.write("\nTRTvarname   = 'tropfrac'")
    file1.write("\nTRTfillvalue = '-1'")
    file1.write("\nshrubfilename = 'GF3aShrub.nc3'")
    file1.write("\nshrubvarname  = 'm204shrub'")
    file1.write("\nshrubfillvalue = '-128'")
    file1.write("\ngrassfilename = 'GF3aGrass.nc3'")
    file1.write("\ngrassvarname  = 'm202grass'")
    file1.write("\ngrassfillvalue = '-128'")
    file1.write("\ncropfilename  = 'GF3aCrop.nc3'")
    file1.write("\ncropvarname   = 'm20crop'")
    file1.write("\ncropfillvalue = '-128'")
    file1.write('\n/')
    file1.write('\n')
    file1.write('\n&windowdefs')
    file1.write('\n')
    file1.write('\n x0         =  1,')
    file1.write('\n y0         =  1,')
    file1.write('\n ncolsin    =  '+str(ncols)+',')    
    file1.write('\n nrowsin    =  '+str(nrows)+',')    
    file1.write('\n')
    file1.write('\n/') 
    file1.close()
    return MEGANHome    

def writePrepMeganGrwform(MEGANHome,wrf_file,ncols,nrows):  
    scriptPath = MEGANHome +'/MEGAN31_Prep_Code_July2020'       
    file1 = open(scriptPath + "/prepmegan4cmaq_grwform.inp","w") 
    file1.write('&control')
    file1.write('\n')
    file1.write('\nstart_lai_mnth = 1,')
    file1.write('\nend_lai_mnth   = 12,')              
    file1.write("\nwrf_dir = '"+wrf_file+"',")
    file1.write("\nmegan_dir = '"+MEGANHome+"/input',")
    file1.write("\nout_dir = '"+MEGANHome+"/input',")
    #file1.write('\n')
    file1.write('\n/')
    file1.write('\n')
    file1.write('\n&growthform')
    file1.write("\ntreefilename  = 'tree30s_reorder_lat.nc'")
    file1.write("\ntreevarname   = 'treeFrac'")
    file1.write("\ntreefillvalue = '-1'")
    file1.write("\nshrubfilename = 'shrb30s_reorder_lat.nc'")
    file1.write("\nshrubvarname  = 'shrubFrac'")
    file1.write("\nshrubfillvalue = '-1'")
    file1.write("\ngrassfilename = 'gras30s_reorder_lat.nc'")
    file1.write("\ngrassvarname  = 'grassFrac'")
    file1.write("\ngrassfillvalue = '-1'")
    file1.write("\ncropfilename  = 'crop30s_reorder_lat.nc'")
    file1.write("\ncropvarname   = 'cropFrac'")
    file1.write("\ncropfillvalue = '-1'")
    file1.write('\n')
    file1.write('\n/')
    file1.write('\n')
    file1.write('\n&windowdefs')
    file1.write('\n')
    file1.write('\n x0         =  1,')
    file1.write('\n y0         =  1,')
    file1.write('\n ncolsin    =  '+str(ncols)+',')    
    file1.write('\n nrowsin    =  '+str(nrows)+',')    
    file1.write('\n')
    file1.write('\n/') 
    file1.close()
    return MEGANHome    
 
def writePrepMeganEcotype(MEGANHome,wrf_file,ncols,nrows):  
    scriptPath = MEGANHome +'/MEGAN31_Prep_Code_July2020'       
    file1 = open(scriptPath + "/prepmegan4cmaq_ecotype.inp","w") 
    file1.write('&control')
    file1.write('\n')
    file1.write('\n start_lai_mnth = 1,')
    file1.write('\n end_lai_mnth   = 12,')              
    file1.write("\n wrf_dir = '"+wrf_file+"',")
    file1.write("\n megan_dir = '"+MEGANHome+"/input',")
    file1.write("\n out_dir = '"+MEGANHome+"/input',")
    file1.write("\n inpname = 'ecotype30s_reorder_lat.nc',")
    file1.write("\n varname = 'ecotype',")
    file1.write("\n fillvalue = '32767',")
    file1.write('\n')
    file1.write('\n/')
    file1.write('\n')
    file1.write('\n&windowdefs')
    file1.write('\n')
    file1.write('\n x0         =  1,')
    file1.write('\n y0         =  1,')
    file1.write('\n ncolsin    =  '+str(ncols)+',')    
    file1.write('\n nrowsin    =  '+str(nrows)+',')    
    file1.write('\n')
    file1.write('\n/') 
    file1.close()
    return MEGANHome    

def writeRunMet2mgn(MEGANHome,GDNAM,STJD,EDJD,mcipPath):  
    file1 = open(MEGANHome+"/MEGANv3.21/work/run.met2mgn.v32.csh","w") 
    file1.write('#! /bin/csh -f')
    file1.write('\n#')    
    file1.write('\nSetting up episode   IMPORTANT: you cannot run a period a few days at a time.')
    file1.write('\n############################################################')
    file1.write('\nsource ../setcase.csh')
    file1.write('\nforeach dom ( '+GDNAM+' )')
    file1.write('\nsetenv sJDATE '+ STJD)
    file1.write('\nsetenv eJDATE '+EDJD)
    file1.write('\n#setenv STJD $sJDATE[$ii]')
    file1.write('\n#setenv EDJD $eJDATE[$ii]')
    file1.write('\nsetenv STJD $sJDATE')
    file1.write('\nsetenv EDJD $eJDATE')

    file1.write('\nset INPPATH     = '+mcipPath)
    file1.write('\nset OUTPATH     = $MGNINP/MGNMET')

    file1.write('\n#set for grid')
    file1.write('\nsetenv GRIDDESC $INPPATH/GRIDDESC')
    file1.write('\nsetenv GDNAM3D ${dom}')
    file1.write('\nsetenv MET_FILE_END ${dom}.nc ')


    file1.write('\n# Setting up directories and common environment variable')
    file1.write('\n############################################################')

    file1.write('\nsetenv PROG met2mgn')
    file1.write('\nsetenv EXE $MGNEXE/$PROG')
    file1.write('\n#setenv EXE /disk8/MEGAN3_1/source_code/MEGAN3_1/src/MET2MGN/$PROG')
    file1.write('\nset logdir = logdir/$PROG')
    file1.write('\nif ( ! -e $logdir) mkdir -p $logdir')

    file1.write('\nif (! -e $OUTPATH) mkdir $OUTPATH')

    file1.write('\nsetenv PFILE $OUTPATH/PFILE')

    file1.write('\n# Looping')
    file1.write('\n############################################################')
    file1.write('\nset JDATE = $STJD')
    file1.write('\nwhile ($JDATE <= $EDJD)')
    file1.write('\nsetenv EPISODE_SDATE $JDATE')
    file1.write('\nsetenv EPISODE_STIME 000000 ')   
    file1.write('\necho $JDATE is processing')
    file1.write('\nrm -fv $PFILE')
    file1.write('\necho $PFILE')
    file1.write('\nif ($JDATE == 2007366) setenv JDATE 2008001')
    file1.write('\nif ($JDATE == 2008367) setenv JDATE 2009001')
    file1.write('\nif ($JDATE == 2011366) setenv JDATE 2012001')
    file1.write('\nif ($JDATE == 2012367) setenv JDATE 2013001')
    file1.write('\nif ($JDATE == 2013366) setenv JDATE 2014001')


    file1.write('\n@ jdy  = $JDATE - 2000000')
    file1.write('\n@ jdyf  = $EDJD - 2000000')
    file1.write('\nsetenv Y4  `echo $JDATE | cut -c 1-4`')
    file1.write('\nsetenv nday `echo $JDATE | cut -c 5-7`')
    file1.write('\n@ nday = $nday - 1')
    file1.write('\nsetenv Y2  `echo $JDATE | cut -c 3-4`')
    file1.write('\nsetenv CAL_DATE `date -d "${Y4}0101 +${nday} day" +%Y%m%d`')
    file1.write('\nsetenv MM `echo $CAL_DATE | cut -c 5-6`')
    file1.write('\nsetenv DD `echo $CAL_DATE | cut -c 7-8`')
    file1.write('\n@ JDATEm1 = $JDATE - 1')
    file1.write('\nif ($JDATEm1 == 2007000) setenv JDATEm1 2006365')
    file1.write('\nif ($JDATEm1 == 2008000) setenv JDATEm1 2007365')
    file1.write('\nif ($JDATEm1 == 2009000) setenv JDATEm1 2008366')
    file1.write('\nif ($JDATEm1 == 2012000) setenv JDATEm1 2011365')
    file1.write('\nif ($JDATEm1 == 2013000) setenv JDATEm1 2012366')
    file1.write('\n@ jdym1  = $JDATEm1 - 2000000')
    file1.write("\n#set Y4m1 = `yj2ymd $JDATEm1 | awk '{print $1}'`")
    file1.write("\n#set Y2m1 = `echo $Y4m1 | cut -c 3-4`")
    file1.write("\n#set MMm1 = `yj2ymd $JDATEm1 | awk '{print $2}'`")
    file1.write("\n#set DDm1 = `yj2ymd $JDATEm1 | awk '{print $3}'`")


    file1.write('\nsetenv Y4m1  `echo $JDATEm1 | cut -c 1-4`')
    file1.write('\nsetenv daym1 `echo $JDATEm1 | cut -c 5-7`')
    file1.write('\n@ daym1 = $daym1 - 1')
    file1.write('\nsetenv Y2m1  `echo $JDATEm1 | cut -c 3-4`')
    file1.write('\nsetenv CLDATEm1 `date -d "${Y4}0101 +${daym1} days" +%Y%m%d`')

    file1.write('\nsetenv MMm1 `echo $CLDATEm1 | cut -c 5-6`')
    file1.write('\nsetenv DDm1 `echo $CLDATEm1 | cut -c 7-8`')
    file1.write('\necho $Y4m1$MMm1$DDm1')


    file1.write('\n#set start/end dates')
    file1.write('\nsetenv STDATE ${jdy}00')
    file1.write('\nsetenv ENDATE ${jdyf}00')

    file1.write('\n#TEMP/PAR input choices')
    file1.write('\n#set if using MM5 output files')
    file1.write('\nsetenv MM5MET N')
    file1.write('\nsetenv MM5RAD N')
    file1.write('\n#setenv numMM5 2')
    file1.write('\n#setenv MM5file1 /pete/pete5/fcorner/met/links/MMOUT_DOMAIN1_G$Y4$MM$DD')

    file1.write('\n#set if using UMD satellite PAR data')
    file1.write('\nset PARDIR = $MGNINP/PAR')
    file1.write('\nsetenv SATPAR N')
    file1.write('\nset satpar1 = "$PARDIR/$Y2m1${MMm1}par.h"')
    file1.write('\nset satpar2 = "$PARDIR/$Y2${MM}par.h"')

    file1.write('\nif ($satpar1 == $satpar2) then')
    file1.write('\n  setenv numSATPAR 1')
    file1.write('\n  setenv SATPARFILE1 $satpar2')
    file1.write('\nelse')
    file1.write('\n  setenv numSATPAR 2')
    file1.write('\n  setenv SATPARFILE1 $satpar1')
    file1.write('\n  setenv SATPARFILE2 $satpar2')
    file1.write('\nendif')
    file1.write('\n#set if using MCIP output files')
    file1.write('\nsetenv MCIPMET Y')
    file1.write('\nsetenv TMCIP  TEMP2          #MCIP v3.3 or newer')
    file1.write('\n#setenv TMCIP  TEMP1P5       #MCIP v3.2 or older')
    file1.write('\nsetenv SOICRO_YN  Y      # [Y/N] set Y for MCIP4.5+ to read soil moisture/soil')

    file1.write('\nsetenv MCIPRAD Y')
    file1.write('\nif ($JDATE == $EPISODE_SDATE) then')
    file1.write('\n  #setenv METCRO2Dfile1 $INPPATH/METCRO2D_aqrp_bvoc_${dom}km.$Y4$MM$DD')
    file1.write('\n  setenv METCRO2Dfile1 $INPPATH/METCRO2D_$MET_FILE_END')
    file1.write('\n  if ( $SOICRO_YN == Y ) then')
    file1.write('\n   setenv SOICROfile1   $INPPATH/SOI_CRO_$MET_FILE_END')
    file1.write('\n  endif')
    file1.write('\nelse')
    file1.write('\n  setenv METCRO2Dfile1 $INPPATH/METCRO2D_$MET_FILE_END')
    file1.write('\n  setenv METCRO2Dfile2 $INPPATH/METCRO2D_$MET_FILE_END')
    file1.write('\n  if ( $SOICRO_YN == Y ) then')
    file1.write('\n   setenv SOICROfile1   $INPPATH/SOI_CRO_$MET_FILE_END')
    file1.write('\n   setenv SOICROfile2   $INPPATH/SOI_CRO_$MET_FILE_END')
    file1.write('\n  endif')

    file1.write('\nendif')
    file1.write('\nsetenv METCRO3Dfile  $INPPATH/METCRO3D_$MET_FILE_END')
    file1.write('\nsetenv METDOT3Dfile  $INPPATH/METDOT3D_$MET_FILE_END')

    file1.write('\nsetenv OUTFILE $OUTPATH/MET.MEGAN.$GDNAM3D.rad45.$JDATE.ncf')
    file1.write('\nrm -rf $OUTFILE')

    file1.write('\n$EXE |tee $logdir/log.$PROG.$GDNAM3D.rad45.$JDATE.txt ')

    file1.write('\n@ JDATE++')
    file1.write('\nend  # End while JDATE')
    file1.write('\nend  # End foreach dom')
    file1.close()
    return MEGANHome 

def writeRunDaymet(MEGANHome,mcipPath,GDNAM,STJD):  
    file1 = open(MEGANHome+"/MEGANv3.21/work/run.daymet.v32.csh","w") 
    file1.write('\n#! /bin/csh -f')
    file1.write('\n########################################################################')
    file1.write('\n## Common setups')
    file1.write('\nsource ../setcase.csh')

    file1.write('\n## Directory setups')
    file1.write('\nsetenv PRJ '+GDNAM)
    file1.write('\nsetenv PROMPTFLAG N')

    file1.write('\n# Program directory')
    file1.write('\nsetenv PROG daymet')
    file1.write('\nsetenv EXEDIR $MGNEXE ')
    file1.write('\nsetenv EXE    $EXEDIR/$PROG')

    file1.write('\n# Input MCIP met directory')
    file1.write('\nsetenv METDIR $MGNINP/MGNMET')

    file1.write('\n# Output directory')
    file1.write('\nsetenv OUTDIR $MGNINT')

    file1.write('\n# Log directory')
    file1.write('\nsetenv LOGDIR $MGNLOG/daymet')
    file1.write('\n########################################################################')

    file1.write('\n# Grid definition')
    file1.write('\nforeach dom ( '+GDNAM+' )')
    file1.write('\nset INPPATH     = '+mcipPath)
    file1.write('\nsetenv GRIDDESC $INPPATH/GRIDDESC')
    file1.write('\nsetenv GDNAM3D ${dom}')

    file1.write('\nsetenv STARTDATE '+STJD)
    file1.write('\nsetenv ENDDATE ' +STJD)
    file1.write('\nsetenv RUNDAY 1')
    file1.write('\nsetenv STIME 00             #start time')
    file1.write('\nsetenv RLENG 250000         # time step of meteorology files')
    file1.write('\nsetenv NDAYS 1        # number of meteorology files')

    file1.write('\n# loop over episode')
    file1.write('\nset i = 1')
    file1.write('\nwhile ( $i <= $RUNDAY )')
    file1.write('\nset j = `printf "%03i" $i`')
    file1.write('\n@ JDATE =  $STARTDATE + $i - 1')
    file1.write('\nsetenv EPISDATE  $JDATE ')
    file1.write('\necho $EPISDATE')
    file1.write('\n# MGNMET')
    file1.write('\n#setenv MGNMET$j $METDIR/MET.MEGAN.${GDNAM3D}.rad45.${JDATE}.ncf')
    file1.write('\nsetenv MGNMET001 $METDIR/MET.MEGAN.${GDNAM3D}.rad45.${JDATE}.ncf')
    file1.write('\n# Output')
    file1.write('\nsetenv DailyMET $OUTDIR/DAYMET.$GDNAM3D.$JDATE.ncf')

    file1.write('\n########################################################################')
    file1.write('\n## Run MEGAN')
    file1.write('\nrm -f $DailyMET')
    file1.write('\nif ( ! -e $LOGDIR ) mkdir -p $LOGDIR')
    file1.write('\n$EXE | tee $LOGDIR/log.run.$PROG.$GDNAM3D.txt')
    file1.write('\n@ i++')
    file1.write('\nend ')

    file1.write('\nend # dom')

    file1.close()
    return MEGANHome 

def writeRunMegcan(MEGANHome,mcipPath,GDNAM):
    #os.remove(MEGANHome+"/MEGANv2.10/work/run.txt2ioapi.v210.csh")
    file1 = open(MEGANHome+"/MEGANv3.21/work/run.megcan.v32.csh","w") 

    file1.write('\n! /bin/csh -f')
    file1.write('\n########################################################################')
    file1.write('\nsource ../setcase.csh')
    file1.write('\n## Directory setups')
    file1.write('\nsetenv PROMPTFLAG N')

    file1.write('\n# Program directory')
    file1.write('\nsetenv PROG   MEGCAN')
    file1.write('\nsetenv EXEDIR $MGNEXE  ')
    file1.write('\nsetenv EXE    $EXEDIR/megcan')

    file1.write('\n# Input map data directory')
    file1.write('\nsetenv INPDIR $MGNINP/MAP')

    file1.write('\n# Number of LAI records')
    file1.write('\nsetenv NLAI 46')

    file1.write('\n# MCIP input directory')
    file1.write('\nsetenv METDIR $MGNINP/MGNMET')

    file1.write('\n# Output directory')
    file1.write('\nsetenv OUTDIR $MGNINT')

    file1.write('\n# Log directory')
    file1.write('\nsetenv LOGDIR $MGNLOG/megcan')
    file1.write('\nmkdir -p $LOGDIR')
    file1.write('\n########################################################################')

    file1.write('\nforeach dom ( '+GDNAM+'  )')
    file1.write('\n#set JD = 2019059')
    file1.write('\n#set ED = 2019120')
    file1.write('\nset JD = '+STJD)
    file1.write('\nset ED = '+STJD)
    file1.write('\nset JDi = '+STJD)
    file1.write('\nwhile ($JD <= $ED)')
    file1.write('\n########################################################################')
    file1.write('\n# Set up time and date to process')
    file1.write('\nsetenv SDATE $JD        #start date')
    file1.write('\nsetenv STIME 0')
    file1.write('\nsetenv RLENG 250000')

    file1.write('\n########################################################################')

    file1.write('\n########################################################################')
    file1.write('\n# Set up for MEGAN')
    file1.write('\nsetenv RUN_MEGAN   Y       # Run megan?')

    file1.write('\n# Grid definition')
    file1.write('\nsetenv GDNAM3D ${dom} ')
    file1.write('\nsetenv GRIDDESC '+mcipPath+'/GRIDDESC')


    file1.write('\n# CANTYP')
    file1.write('\nsetenv CANTYP $INPDIR/CT3_$dom.ncf')

    file1.write('\n# LAIS46')
    file1.write('\nsetenv LAIFILE $INPDIR/LAI3_$dom.ncf')

    file1.write('\n# MGNMET')
    file1.write('\nsetenv MGNMET $METDIR/MET.MEGAN.${dom}.rad45.${JD}.ncf')

    file1.write('\n# Output')
    file1.write('\nsetenv CANMET $OUTDIR/CANMET.$dom.${JD}.ncf')

    file1.write('\n########################################################################')
    file1.write('\n## Run MEGAN')
    file1.write("\nif ( $RUN_MEGAN == 'Y' ) then")
    file1.write('\n   rm -f $CANMET')
    file1.write('\n   $EXE | tee $LOGDIR/log.run.$PROG.$GDNAM3D.$JD.txt')
    file1.write('\nendif')

    file1.write('\n@ JD++')
    file1.write('\nend  # End while JD')

    file1.write('\nend  # dom')
    file1.close()
    return MEGANHome 

def writeRunTxt2ioapi(MEGANHome,mcipPath,GDNAM):
    file1 = open(MEGANHome+"/MEGANv3.21/work/run.txt2ioapi.v32.csh","w") 
    file1.write('#! /bin/csh -f')
    file1.write("\n##########################################################")
    file1.write('\n## Common setups')
    file1.write('\nsource '+MEGANHome+'/MEGANv3.21/setcase.csh')        
    file1.write('\n')
    file1.write('\nforeach dom ( '+GDNAM+ ' )') 
    file1.write('\nforeach scen ( J4 )') 
    file1.write('\n')
    file1.write('\nsetenv PROMPTFLAG N')
    file1.write('\nsetenv PROG txt2ioapi')
    file1.write('\nsetenv EXEC $MGNEXE/$PROG')
    file1.write('\nsetenv GRIDDESC '+mcipPath+'/GRIDDESC')
    file1.write('\nsetenv GDNAM3D $dom')
    file1.write('\nsetenv MEGAN_HOME '+MEGANHome)
    file1.write('\nset dd = `echo $dom | cut -c 1-2`')
    file1.write('\n## File setups')
    file1.write('\n#############  Inputs #####################')
    file1.write('\n# Emission factor file')
    file1.write('\nsetenv EFSTXTF ${MEGAN_HOME}/MEGANv3.21/MEGEFP32/outputs/OutputGridEF.${dom}.csv')
    file1.write('\n# Light dependent factor file ')
    file1.write('\nsetenv LDFTXTF ${MEGAN_HOME}/MEGANv3.21/MEGEFP32/outputs/OutputGridEF.${dom}.csv')
    file1.write('\n# Canopy type file')
    file1.write('\nsetenv CTTXTF ${MEGAN_HOME}/input/CT3.csv')
    file1.write('\n# Leaf area index file')
    file1.write('\nsetenv LAITXTF ${MEGAN_HOME}/input/LAI3.csv')
    file1.write('\nsetenv NLAI 46 #number of LAI records')
    file1.write('\nsetenv LAIv_YN Y')
    file1.write('\n# W126 input file (if trurning on air pollution stress)')
    file1.write('\nsetenv W126TXTF ${MEGAN_HOME}/input/grid_W126.csv')
    file1.write('\n# Files below are needed if BDSNP soil NO algorith is used')
    file1.write('\n# Climate arid file')
    file1.write('\nsetenv ARIDTXTF ${MEGAN_HOME}/input/grid_arid.csv')
    file1.write('\n# Climate nonarid file')
    file1.write('\nsetenv NONARIDTXTF ${MEGAN_HOME}/input/grid_non_arid.csv')
    file1.write('\n# Biome type file')
    file1.write('\nsetenv LANDTYPETXTF ${MEGAN_HOME}/input/grid_LANDTYPE.csv')
    file1.write('\n# Fertilizer input file (in kg/m3)')
    file1.write('\nsetenv FERTTXTF ${MEGAN_HOME}/input/grid_FERT.csv')
    file1.write('\n# Nitrogen depostiion file (total nitrogen deposition in ng/m2/s)')
    file1.write('\nsetenv NDEPTXTF ${MEGAN_HOME}/input/grid_NITROGEN.csv')
    file1.write('\n################# Outputs #######################')
    file1.write('\nsetenv EFMAPS  $MGNINP/MAP/EFMAP.2019b.${GDNAM3D}.ncf')
    file1.write('\nsetenv CANTYP  $MGNINP/MAP/CT3_${GDNAM3D}.ncf')
    file1.write('\nsetenv LAIFILE  $MGNINP/MAP/LAI3_${GDNAM3D}.ncf')
    file1.write('\nsetenv W126FILE $MGNINP/MAP/W126_${GDNAM3D}.ncf')
    file1.write('\nsetenv LDFILE $MGNINP/MAP/LDF_${GDNAM3D}.2019b.ncf')
    file1.write('\nsetenv ARIDFILE $MGNINP/MAP/ARID_${GDNAM3D}.ncf')
    file1.write('\nsetenv NONARIDFILE $MGNINP/MAP/NONARID_${GDNAM3D}.ncf')
    file1.write('\nsetenv LANDTYPEFILE $MGNINP/MAP/LANDTYPE_${GDNAM3D}.ncf')
    file1.write('\nsetenv FERTRESFILE $MGNINP/MAP/FERT_${GDNAM3D}.ncf')
    file1.write('\nsetenv NDEPFILE $MGNINP/MAP/NDEP_${GDNAM3D}.ncf')
    file1.write('\n## Run control')
    file1.write('\nsetenv RUN_EFS      T  # [T|F]')
    file1.write('\nsetenv RUN_LAI      T  # [T|F]')
    file1.write('\nsetenv RUN_CANTYP   T  # [T|F]')
    file1.write('\nsetenv RUN_W126     F  # [T|F]')
    file1.write('\nsetenv RUN_LDF      T  # [T|F]')
    file1.write('\nsetenv RUN_ARID     T  # [T|F] ')
    file1.write('\nsetenv RUN_NONARID  T # [T|F]')
    file1.write('\nsetenv RUN_FERT     T  # [T|F] fertilizer data')
    file1.write('\nsetenv RUN_NITROGEN T  # [T|F] total nitrogen deposition data (ng/m2>')
    file1.write('\nsetenv RUN_LANDTYPE T  # [T|F] biome type')
    file1.write('\n####################################################################>')
    file1.write('\n## Run TXT2IOAPI')
    file1.write('\n#rm -f $LAIS46')
    file1.write('\n#rm -f $EFMAPS')
    file1.write('\n#rm -f $CANTYP')
    file1.write('\n#rm -f $W126FILE')
    file1.write('\n#rm -f $LDFILE')
    file1.write('\n#rm -f $ARIDFILE')
    file1.write('\n#rm -f $NONARIDFILE')
    file1.write('\n#rm -f $LANDTYPEFILE')
    file1.write('\n#rm -f $NDEPFILE')
    file1.write('\nrm -f $FERTRESFILE')
    file1.write('\nif ( ! -e $MGNLOG/$PROG ) mkdir -p $MGNLOG/$PROG')
    file1.write('\nif ( $RUN_EFS == T || $RUN_LDF == T ) then')
    file1.write('\n$EXEC | tee $MGNLOG/$PROG/log.run.$PROG.${GDNAM3D}.txt')
    file1.write('\nelse')
    file1.write('\n$EXEC | tee $MGNLOG/$PROG/log.run.$PROG.${GDNAM3D}.txt')
    file1.write('\nendif')
    file1.write('\nend')
    file1.write('\nend')
    file1.write('\n')
    file1.close()
    return MEGANHome   

def writeRunMegsea(MEGANHome,mcipPath,GDNAM):
    file1 = open(MEGANHome+"/MEGANv3.21/work/run.megsea.v32.csh","w") 
    file1.write('\n#! /bin/csh -f')
    file1.write('\n########################################################################')
    file1.write('\nsource ../setcase.csh')
    file1.write('\n## Directory setups')
    file1.write('\nsetenv PROMPTFLAG N')
    file1.write('\n')
    file1.write('\n# Program directory')
    file1.write('\nsetenv PROG   megsea')
    file1.write('\nsetenv EXEDIR $MGNEXE ')
    file1.write('\nsetenv EXE    $EXEDIR/$PROG')
    file1.write('\n# Input map data directory')
    file1.write('\nsetenv INPDIR $MGNINP/MAP')
    file1.write('\n')
    file1.write('\n# Number of LAI records')
    file1.write('\nsetenv NLAI 46')
    file1.write('\n')
    file1.write('\n# Met data directory')
    file1.write('\nsetenv METDIR $MGNINP/MGNMET')
    file1.write('\n')
    file1.write('\n# Output directory')
    file1.write('\nsetenv OUTDIR $MGNINT')
    file1.write('\n# Log directory')
    file1.write('\nsetenv LOGDIR $MGNLOG/megsea')
    file1.write('\nmkdir -p $LOGDIR')
    file1.write('\nsetenv GAMSM_MODEL F #T:G2006 model F:Jiang et al. 2018 ')
    file1.write('\n########################################################################')
    file1.write('\n')
    file1.write('\nforeach dom ( '+GDNAM+' ) ')
    file1.write("\nsetenv DOMAIN `echo $dom | cut -d '_' -f1`")
    file1.write('\nsetenv GRIDDESC '+mcipPath+'/GRIDDESC')
    file1.write('\nsetenv SDATE '+STJD)
    file1.write('\nsetenv EDATE '+STJD)
    file1.write('\n')
    file1.write('\n')
    file1.write('\nset JD = $SDATE')
    file1.write('\nwhile ($JD <= $EDATE )')
    file1.write('\nsetenv EPISDATE $JD # Episode start date')
    file1.write('\nsetenv EPIEDATE $JD # Episode start date')
    file1.write('\n')
    file1.write('\nsetenv Y4  `echo $JD | cut -c 1-4`')
    file1.write('\nsetenv nday `echo $JD | cut -c 5-7`')
    file1.write('\n@ nday = $nday - 1')
    file1.write('\nsetenv Y2  `echo $JD | cut -c 3-4`')
    file1.write('\nsetenv CAL_DATE `date -d "${Y4}0101 +${nday} day" +%Y%m%d`')
    file1.write('\nsetenv MM `echo $CAL_DATE | cut -c 5-6`')
    file1.write('\nsetenv DD `echo $CAL_DATE | cut -c 7-8`')
    file1.write('\nset GD = $CAL_DATE')
    file1.write("\nset m = `echo $GD | cut -c 5-6 | sed 's/^0//g'`")
    file1.write('\n########################################################################')
    file1.write('\n# Set up time and date to process')
    file1.write('\nsetenv SDATE $JD        #start date')
    file1.write('\nsetenv STIME 0')
    file1.write('\nsetenv RLENG 250000')
    file1.write('\nsetenv MONTH $m')
    file1.write('\n@ JDnext = $JD + 1')
    file1.write('\n########################################################################')
    file1.write('\n# Set up for MEGAN')
    file1.write('\nsetenv RUN_MEGAN   Y       # Run megan?')
    file1.write('\n# Grid definition')
    file1.write('\nsetenv GDNAM3D ${dom}')
    file1.write('\n########### START OF SETTING BDSNP SOIL NO ###############')
    file1.write('\n# New in MEGAN3.1')
    file1.write('\n# YL (BDSNP=N) or Berekely Dalhousie (BDSNP=Y) for soil NO estimation?')
    file1.write('\nsetenv BDSNP_YN        Y      # [Y/N]: Y uses Berekely Dalhousie for soil NO calculation;')
    file1.write('\nsetenv EPIC            N      # [Y/N]: Y uses EPIC model output for fertilizer;')
    file1.write('\nif ( $BDSNP_YN == Y ) then')
    file1.write('\nsetenv PX_VERSION      Y      # MCIP must be PX version when using BDSNP option')
    file1.write('\nif ( $JD == $EPISDATE ) then')
    file1.write('\nsetenv INITIAL_RUN     Y      # Initial run if the model hasnt been run before;')
    file1.write('\nelse')
    file1.write('\nsetenv INITIAL_RUN     N      # Initial run if the model hasnt been run before;')
    file1.write('\n# Restart file from running previous day')
    file1.write('\nsetenv SOILINSTATE $MGNINT/SOILINSTATE.$GDNAM3D.$JD.ncf')
    file1.write('\nendif # INITIAL_RUN')
    file1.write('\n# Additional input files for BDSNP algorithm')
    file1.write('\n# canopy climate conditions')
    file1.write('\nsetenv CANMET $OUTDIR/CANMET.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n# climate file, nonarid')
    file1.write('\nsetenv CLIMAFILE $INPDIR/ARID_${GDNAM3D}.ncf')
    file1.write('\n# climate file, arid')
    file1.write('\nsetenv CLIMNAFILE $INPDIR/NONARID_${GDNAM3D}.ncf')
    file1.write('\n# biome type file')
    file1.write('\nsetenv LANDTYPEFILE $INPDIR/LANDTYPE_${GDNAM3D}.ncf')
    file1.write('\n# Nitrogen deposition file')
    file1.write('\nsetenv NDEPFILE $INPDIR/NDEP_${GDNAM3D}.ncf')
    file1.write('\n# fertilizer reservoir file')
    file1.write('\nif ( $EPIC == N ) then')
    file1.write('\nsetenv FERTRESFILE $INPDIR/FERT_${GDNAM3D}.ncf')
    file1.write('\nelse')
    file1.write('\n# if using EPIC model for fertilizer input')
    file1.write('\nsetenv EPICRESFILE $INPDIR/EPIC_$GDNAM3D.ncf')
    file1.write('\nendif')
    file1.write('\n')
    file1.write('\n# Restart file for next day')
    file1.write('\nsetenv SOILOUT $MGNINT/SOILINSTATE.$GDNAM3D.$JDnext.ncf')
    file1.write('\nrm -f $SOILOUT')
    file1.write('\n')
    file1.write('\nendif')
    file1.write('\n######## END OF SETTINGS FOR BDSNP NO ##############')
    file1.write('\n')
    file1.write('\n# CANTYP')
    file1.write('\nsetenv CANTYP $INPDIR/CT3_$GDNAM3D.ncf')
    file1.write('\n# LAIS46')
    file1.write('\nsetenv LAIFILE $INPDIR/LAI3_$GDNAM3D.ncf')
    file1.write('\n# MGNMET')
    file1.write('\nsetenv MGNMET $METDIR/MET.MEGAN.$GDNAM3D.rad45.${JD}.ncf')
    file1.write('\n# Output')
    file1.write('\nsetenv MGNSEA $MGNINT/MGNSEA.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n########################################################################')
    file1.write('\n## Run MEGAN')
    file1.write("\nif ( $RUN_MEGAN == 'Y' ) then")
    file1.write('\n  rm -f $MGNSEA')
    file1.write('\n  $EXE | tee $LOGDIR/log.run.$PROG.$GDNAM3D.$SDATE.txt')
    file1.write('\nendif')
    file1.write('\n')
    file1.write('\n@ JD++')
    file1.write('\nend  # End while JD')
    file1.write('\n')
    file1.write('\nend # dom')
    file1.close()
    return MEGANHome     

def writeRunMegvea(MEGANHome,mcipPath,GDNAM,STJD):
    file1 = open(MEGANHome+"/MEGANv3.21/work/run.megvea.v32.csh","w") 
    file1.write('\n#! /bin/csh -f')
    file1.write('\n########################################################################')
    file1.write('\nsource ../setcase.csh')
    file1.write('\n## Directory setups')
    file1.write('\nsetenv PROMPTFLAG N')
    file1.write('\n# Program directory')
    file1.write('\nsetenv PROG   megvea')
    file1.write('\nsetenv EXEDIR $MGNEXE ')
    file1.write('\nsetenv EXE    $EXEDIR/$PROG')
    file1.write('\n# Input map data directory')
    file1.write('\nsetenv INPDIR $MGNINP/MAP')
    file1.write('\n# Output directory')
    file1.write('\nsetenv OUTDIR $MGNINT')
    file1.write('\n# Log directory')
    file1.write('\nsetenv LOGDIR $MGNLOG/megvea')
    file1.write('\nmkdir -p $LOGDIR')
    file1.write('\n########################################################################')
    file1.write('\nsetenv Layers 5          # canopy vertical layers, default is 5')
    file1.write('\nsetenv NLAI 46')
    file1.write('\n# Users options to select specific emission activity factors to be applied')
    file1.write('\nsetenv GAMAQ_YN   N      # [Y/N]: Y applies air quality stress; default is N')
    file1.write('\nsetenv GAMCO2_YN  Y      # [Y/N]: Y applies emission response to CO2; default is N')
    file1.write('\nsetenv GAMHW_YN   Y      # [Y/N]: Y applies emission response to high wind storm; default is N')
    file1.write('\nsetenv GAMHT_YN   Y      # [Y/N]: Y applies emission response to high temperature; default is N')
    file1.write('\nsetenv GAMLT_YN   Y      # [Y/N]: Y applies emission response to low temperature; default is N')
    file1.write('\nsetenv GAMSM_YN   Y      # [Y/N]: Y applies emission response to soil moisture; default is N')
    file1.write('\n########################################################################')
    file1.write('\nforeach dom ( '+GDNAM+' )')
    file1.write('\nset JD = '+STJD)
    file1.write('\nset JDi = '+STJD)
    file1.write('\nwhile ($JD <= ${JDi} )')
    file1.write('\n########################################################################')
    file1.write('\n# Set up time and date to process')
    file1.write('\nsetenv SDATE $JDi        #start date')
    file1.write('\nsetenv STIME 0')
    file1.write('\nsetenv RLENG 250000')
    file1.write('\n########################################################################')
    file1.write('\n########################################################################')
    file1.write('\n# Set up for MEGAN')
    file1.write('\nsetenv RUN_MEGAN   Y       # Run megan?')
    file1.write('\n# Grid definition')
    file1.write('\nsetenv GRIDDESC '+mcipPath+'/GRIDDESC')
    file1.write('\nsetenv GDNAM3D ${dom}')
    file1.write('\n# number of previous days used for Max/Min temeprature/wind speed')
    file1.write('\nif ( $JD == 2018122 ) then')
    file1.write('\nsetenv N_MaxT 1         # Number of past days for maximum temperature to be used')
    file1.write('\nsetenv N_MinT 1         # Number of past days for minimum temeprature to be used')
    file1.write('\nsetenv N_MaxWS 1        # number of past days for maximum wind speed to be used')
    file1.write('\nelse')
    file1.write('\nsetenv N_MaxT 2         # Number of past days for maximum temperature to be used')
    file1.write('\nsetenv N_MinT 2         # Number of past days for minimum temeprature to be used')
    file1.write('\nsetenv N_MaxWS 2        # Number of past days for maximum wind speed to be used')
    file1.write('\nendif')
    file1.write('\n# LAIS46')
    file1.write('\nsetenv LAIFILE $INPDIR/LAI3_$GDNAM3D.ncf')
    file1.write('\n# CANMET')
    file1.write('\nsetenv CANMET $MGNINT/CANMET.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n# DailyMET')
    file1.write('\nsetenv DailyMET $MGNINT/DAYMET.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n# MEGSEA output')
    file1.write('\nsetenv SMFILE $MGNINT/MGNSEA.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n# AQFILE (required if GAMAQ_YN is set to Y)')
    file1.write('\nsetenv AQFILE $INPDIR/W126_$GDNAM3D.ncf')
    file1.write('\n# LDFILE')
    file1.write('\nsetenv LDFILE $INPDIR/LDF_$GDNAM3D.2019b.ncf')
    file1.write('\n# Output')
    file1.write('\nsetenv MGNERS $MGNINT/MGNERS.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n########################################################################')
    file1.write('\n## Run MEGAN')
    file1.write("\nif ( $RUN_MEGAN == 'Y' ) then")
    file1.write('\n  rm -f $MGNERS')
    file1.write('\n  $EXE | tee $LOGDIR/log.run.$PROG.$GDNAM3D.$SDATE.txt')
    file1.write('\nendif')
    file1.write('\n@ JD++')
    file1.write('\nend  # End while JD')
    file1.write('\nend # dom')
    file1.close()
    return MEGANHome 

def writeRunMgn2mech(MEGANHome,mcipPath,GDNAM,STJD):
    file1 = open(MEGANHome+"/MEGANv3.21/run.mgn2mech.v32.csh","w") 
    file1.write('\n#! /bin/csh -f')
    file1.write('\n########################################################################')
    file1.write('\nsource ../setcase.csh')
    file1.write('\n## Directory setups')
    file1.write('\nsetenv PROMPTFLAG N')
    file1.write('\n# Program directory')
    file1.write('\nsetenv PROG   mgn2mech')
    file1.write('\nsetenv EXEDIR $MGNEXE ')
    file1.write('\nsetenv EXE    $EXEDIR/$PROG')
    file1.write('\n# Input map data directory')
    file1.write('\nsetenv INPDIR $MGNINP/MAP')
    file1.write('\nsetenv GRIDDESC '+mcipPath+'/GRIDDESC')
    file1.write('\n# Intermediate file directory')
    file1.write('\nsetenv INTDIR $MGNINT')
    file1.write('\n# Output directory')
    file1.write('\nsetenv OUTDIR $MGNOUT')
    file1.write('\n# MCIP input directory')
    file1.write('\nsetenv METDIR $MGNINP/MGNMET')
    file1.write('\n# Log directory')
    file1.write('\nsetenv LOGDIR $MGNLOG/$PROG')
    file1.write('\nif ( ! -e $LOGDIR ) mkdir -p $LOGDIR')
    file1.write('\n########################################################################')
    file1.write('\nforeach mech ( CB6X )')
    file1.write('\nforeach dom ( '+GDNAM+' )')
    file1.write('\nset JD = '+STJD)
    file1.write('\nset JDi = '+STJD)
    file1.write('\nwhile ($JD <= '+STJD+')')
    file1.write('\n########################################################################')
    file1.write('\n# Set up time and date to process')
    file1.write('\nsetenv SDATE $JDi        #start date')
    file1.write('\nsetenv STIME 0')
    file1.write('\nsetenv RLENG 250000')
    file1.write('\nsetenv TSTEP 10000')
    file1.write('\n########################################################################')
    file1.write('\n########################################################################')
    file1.write('\n# Set up for MECHCONV')
    file1.write('\nsetenv RUN_SPECIATE   Y    # run MG2MECH')
    file1.write('\nsetenv RUN_CONVERSION Y    # run conversions?')
    file1.write('\nsetenv SPCTONHR       N    # speciation output unit in tonnes per hour')
    file1.write('\nsetenv BDSNP_YN       Y    # Using BDSNP estimated soil NO? This flag needs')
    file1.write('\n# If RUN_CONVERSION is set to "Y", one of mechanisms has to be selected.')
    file1.write('\n#setenv MECHANISM    RADM2')
    file1.write('\n#setenv MECHANISM    RACM')
    file1.write('\n#setenv MECHANISM    CBMZ')
    file1.write('\n#setenv MECHANISM    CB05')
    file1.write('\nsetenv MECHANISM    $mech')
    file1.write('\n#setenv MECHANISM    SOAX')
    file1.write('\n#setenv MECHANISM    SAPRC99')
    file1.write('\n#setenv MECHANISM    SAPRC99Q')
    file1.write('\n#setenv MECHANISM    SAPRC99X')
    file1.write('\n# Grid name')
    file1.write('\nsetenv GDNAM3D ${dom} ')
    file1.write('\n# EFMAPS NetCDF input file')
    file1.write('\nsetenv EFMAPS  $INPDIR/EFMAP.2019b.$GDNAM3D.ncf')
    file1.write('\n# MEGAN ER filename')
    file1.write('\nsetenv MGNERS $INTDIR/MGNERS.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n# MEGSEA filename')
    file1.write('\nsetenv MGNSEA $INTDIR/MGNSEA.$GDNAM3D.${SDATE}.ncf')
    file1.write('\n# Output filename')
    file1.write('\nif ( $BDSNP_YN == Y ) THEN')
    file1.write('\nsetenv MGNOUT $OUTDIR/MEGANv31.$GDNAM3D.$MECHANISM.$SDATE.BDSNP.ncf')
    file1.write('\nelse')
    file1.write('\nsetenv MGNOUT $OUTDIR/MEGANv31.$GDNAM3D.$MECHANISM.$SDATE.ncf')
    file1.write('\nendif')
    file1.write('\n########################################################################')
    file1.write('\n## Run speciation and mechanism conversion')
    file1.write("\nif ( $RUN_SPECIATE == 'Y' ) then")
    file1.write('\n  rm -f $MGNOUT')
    file1.write('\n  $EXE | tee $LOGDIR/log.run.$PROG.$GDNAM3D.$MECHANISM.$SDATE.txt')
    file1.write('\nendif')
    file1.write('\n@ JD++')
    file1.write('\nend  # End while JD')
    file1.write('\nend # dom')
    file1.write('\nend # mech')
    file1.close()
    return MEGANHome 

def writeRunMEGANsetcase(MEGANHome):
    file1 = open(MEGANHome+"/MEGANv3.21/setcase.csh","w") 
    file1.write('#! /bin/csh')
    file1.write('\nsetenv MGNHOME '+MEGANHome+'/MEGANv3.21')
    file1.write('\nsetenv MGNSRC $MGNHOME/src')
    file1.write('\nsetenv MGNRUN $MGNHOME/work')
    file1.write('\nsetenv MGNEXE $MGNHOME/bin')
    file1.write('\nsetenv MGNINP $MGNHOME/Input')
    file1.write('\nsetenv MGNOUT $MGNHOME/Output')
    file1.write('\nsetenv MGNINT $MGNHOME/Output/INT')
    file1.write('\nsetenv MGNLOG $MGNHOME/work/logdir')
    file1.write('\n')
    file1.write('\n')
    file1.write('\nif ( ! -e $MGNSRC ) mkdir -p $MGNSRC')
    file1.write('\nif ( ! -e $MGNRUN ) mkdir -p $MGNRUN')
    file1.write('\nif ( ! -e $MGNINP ) mkdir -p $MGNINP')
    file1.write('\nif ( ! -e $MGNOUT ) mkdir -p $MGNOUT')
    file1.write('\nif ( ! -e $MGNINT ) mkdir -p $MGNINT')
    file1.write('\nif ( ! -e $MGNLOG ) mkdir -p $MGNLOG')
    file1.write('\n')
    file1.write('\n')
    file1.write('\nif ( ! -e $MGNEXE ) then')
    file1.write('\n   mkdir -p $MGNEXE')
    file1.write('\nendif')
    file1.write('\nif ( ! -e $MGNINP ) then')
    file1.write('\n   mkdir -p $MGNINP/MAP')
    file1.write('\n   mkdir -p $MGNINP/MGNMET')
    file1.write('\nendif')
    file1.close()
    return MEGANHome                

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--verbose', default=0, action='count')
    parser.add_argument('MEGANHome')
    parser.add_argument('mcipPath')
    parser.add_argument('wrf_file')
    parser.add_argument('GDNAM')
    parser.add_argument('YEAR')
    parser.add_argument('STJD')
    parser.add_argument('EDJD')
    parser.add_argument('ncols')
    parser.add_argument('nrows')
    args = parser.parse_args()
    MEGANHome = args.MEGANHome
    mcipPath = args.mcipPath
    wrf_file = args.wrf_file
    GDNAM = args.GDNAM
    YEAR = args.YEAR
    STJD = args.STJD
    EDJD = args.EDJD
    ncols = args.ncols
    nrows = args.nrows
    writeRunMEGANsetcase(MEGANHome)
    writePrepMeganInput(MEGANHome,wrf_file,ncols,nrows)
    writePrepMeganCantype(MEGANHome,wrf_file,ncols,nrows)
    writePrepMeganGrwform(MEGANHome,wrf_file,ncols,nrows)
    writePrepMeganEcotype(MEGANHome,wrf_file,ncols,nrows)
    writeRunTxt2ioapi(MEGANHome,mcipPath,GDNAM)
    writeRunMet2mgn(MEGANHome,GDNAM,STJD,EDJD,mcipPath)
    writeRunDaymet(MEGANHome,mcipPath,GDNAM,STJD)
    writeRunMegcan(MEGANHome,mcipPath,GDNAM)
    writeRunMegsea(MEGANHome,mcipPath,GDNAM)
    writeRunMegvea(MEGANHome,mcipPath,GDNAM,STJD)
    writeRunMgn2mech(MEGANHome,mcipPath,GDNAM,STJD)
